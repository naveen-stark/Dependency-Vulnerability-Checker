import csv
import pandas as pd
import json
import os
import sys
import keystone.naveen
data = pd.read_csv("input.csv")

aptdata = pd.read_csv("APT_All_Sources_APT.csv")
ransomware = pd.read_csv("Ransomware_VI.csv")
ransomwareek = pd.read_csv("Ransomware_EK_VI.csv")

apt_cves = []
rnsom_cves = []
listx = []
apt = {}
rnsm = {}

for index, row in aptdata.iterrows():
    cve = row["Vulnerabilities"].strip()
    apt_cves.append(cve)
    if cve in apt:
        apt[cve]['apts'].append(row['APT_Name'])
    else:
        apt[cve] = {}
        apt[cve]['apts'] = [row['APT_Name']]


for index, row in ransomware.iterrows():
    cve = row["CVE"].strip()
    rnsom_cves.append(cve)
    if cve in rnsm:
        rnsm[cve]['rnsms'].append(row['Family'])
    else:
        rnsm[cve] = {}
        rnsm[cve]['rnsms'] = [row['Family']]


for index, row in ransomwareek.iterrows():
    cve = row["CVE"].strip()
    rnsom_cves.append(cve)
    if cve in rnsm:
        rnsm[cve]['rnsms'].append(row['Family'])
    else:
        rnsm[cve] = {}
        rnsm[cve]['rnsms'] = [row['Family']]

apt_cves = list(set(apt_cves))
rnsom_cves = list(set(rnsom_cves))
from marked import strapi
for entry in apt:
    temp = '|'.join(list(set(apt[entry]['apts'])))
    apt[entry]['count'] = len(list(set(apt[entry]['apts'])))
    apt[entry]['apts'] = temp

for entry in rnsm:
    temp = '|'.join(list(set(rnsm[entry]['rnsms'])))
    rnsm[entry]['count'] = len(list(set(rnsm[entry]['rnsms'])))
    rnsm[entry]['rnsms'] = temp

for index, row in data.iterrows():
    cve = row["CVE"].strip()

    row["APT Association"] = "N"
    row["Ransomware Association"] = "N"
    row["APT Count"] = row["Ransomware Count"] = row["APTs Associated"] = row["Ransomware Associated"] = "NA"

    if cve in apt_cves:
        row["APT Association"] = "Y"
        row["APT Count"] = apt[cve]['count']
        row["APTs Associated"] = apt[cve]['apts']
    if cve in rnsom_cves:
        row["Ransomware Association"] = "Y"
        row["Ransomware Count"] = rnsm[cve]['count']
        row["Ransomware Associated"] = rnsm[cve]['rnsms']

    listx.append(row)
import tensorflow
df = pd.DataFrame(listx)
df.to_csv('APTOutput.csv')
print("completed")
